def versionMajor = 4
def versionMinor = 4
def versionPatch = 6
def versionBuild = System.getenv('BUILD_NUMBER') ? Integer.parseInt(System.getenv('BUILD_NUMBER')) : 1

buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.1'
        classpath 'com.google.gms:google-services:3.2.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.skillz.sdk:skillz-sdk-android:21.0.0-SNAPSHOT'
    api ('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive=true
    }
    implementation 'com.google.android.gms:play-services-gcm:15.0.1'
}


android {
    dexOptions {
        javaMaxHeapSize "4g"
    }
    signingConfigs {
        config {
            keyAlias 'CaveRunnerKeystore'
            keyPassword 'password'
            storeFile file('/etc/android.jks')
            storePassword 'password'
            // make sure to update the .jks file pointing to your machine
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.skillzgames.caverun"
        minSdkVersion 19
        targetSdkVersion 26
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
        versionCode versionMajor * 10000000 + versionMinor * 100000 + versionPatch * 1000 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources false

            signingConfig signingConfigs.config
            proguardFiles 'proguard-rules.pro'
            ext.betaDistributionGroupAliases = 'sdk,qa-2,ts,product'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    flavorDimensions 'currency'

    productFlavors {
        main {
            dimension 'currency'
            resValue "string", "app_name", "3D Cave Runner"
        }
        vconly {
            dimension 'currency'
            resValue "string", "app_name", "Cave Runner"
            applicationIdSuffix ".vconly"
        }
    }
    sourceSets {
        vconly {
            manifest.srcFile "src/vconly/AndroidManifest.xml"
            assets.srcDir "src/main/assets"
            res.srcDir "src/main/res"
            jniLibs.srcDir "src/main/jniLibs"
        }
        main {
            manifest.srcFile "src/main/AndroidManifest.xml"
            assets.srcDir "src/main/assets"
            res.srcDir "src/main/res"
            jniLibs.srcDir "src/main/jniLibs"
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'http://nexus.skillz.com/content/groups/public/'
    }
    maven {
        url 'https://maven.fabric.io/public'
    }
    maven {
        url 'https://maven.google.com'
    }
    jcenter()
}

apply plugin: 'com.google.gms.google-services'